{
    "docs": [
        {
            "location": "/", 
            "text": "BUS 41204: Machine Learning\n\n\nLectures\n\n\nThursday 08:30 AM-11:30 AM, Harper Center, HCC01 \n\nFriday 06:00 PM-09:00 PM, Gleacher Center, GC208 \n\nSaturday 06:00 PM-09:00 PM, Gleacher Center, GC208 \n\n\nPiazza Course page: \nhttps://piazza.com/chicagobooth/fall2015/bus41204/home\n\n\nPeople\n\n\nInstructors:\n \n\nMladen Kolar (\nmkolar@chicagobooth.edu\n) Office: HC 306 \n\nRob E. McCulloch (\nRobert.McCulloch@chicagobooth.edu\n) Office: HC 365\n\n\nTAs:\n  \n\nJuan Manuel Yrigoyen Capilla (\njyrigoyen@chicagobooth.edu\n)  \n\nDaniel Hedblom (\nhedblom@uchicago.edu\n)  \n\nVinh Luong (\nvinh.luong@chicagobooth.edu\n)\n\n\nOffice hours:\n by appointment \n\n\nCourse summary\n\n\nIf you are visiting this site in Fall 2015, we predict with \n90%\nconfidence (and 110% excitement!) that you're among the Booth students\nwho, together with us, are making some nice history.\nThis inaugural Machine Learning course specially tailored for MBAs is\nthe VERY FIRST OF ITS KIND in any curricula of the leading U.S. and\ninternational business schools that we know of.\n\n\nMachine Learning is the very core of modern Data Analytics, which\ncompanies big and small are leveraging to mine commercial value out of\ntheir increasingly vast troves of information.\nThis course aims to give you a 10-week tasting session on a diverse\nbuffet of popular, powerful and highly practical Machine Learning\nalgorithms, with the hope that what you take away here will help you\nrise up to data-enabled commercial opportunities in your later\ncareers.\n\n\nStudents will learn about state-of-the-art machine learning techniques\nand how to apply them in business related problems. Techniques will be\nintroduced in the context of business applications and the emphasis\nwill be put on how machine learning can be used to create value and\nprovide insights from data.\n\n\nFirst, and the biggest, part of the class will focus on predictive\nanalytics. Students will learn about decision trees, nearest neighbor\nclassifiers, boosting, random forests, deep neural networks, naive\nBayes and support vector machines. Among other examples, we will apply\nthese techniques to detecting spam in email, click-through rate\nprediction in online advertisement, image classification, face\nrecognition, sentiment analysis and churn prediction. Students will\nlearn what techniques to apply and why.\n\n\nIn the second part of the class, students will learn about\nunsupervised techniques for extracting actionable patterns from\ndata. Examples include clustering, collaborative filtering,\nprobabilistic graphical modeling and dimension reduction with\napplications to customer segmentation, recommender systems, graph and\ntime series mining, and anomaly detection.\n\n\nDiscussion forum\n\n\nWe will be using\n\nPiazza\n for\nclass discussion. Please post any questions that you may have there,\nrather than emailing TAs or instructors. All your classmates will\nbenefit from the public discussion.\n\n\nWe also encourage you to answer other students' questions. Answering\nquestion will reinforce your learning and understanding of the\nmaterial. We will carefully check all discussions and clarify any\nconfusion.\n\n\nIf we answer your questions after 2am, consider sending a rose...\n\n\nPrerequisites\n\n\nThe class does not require sophisticated mathematical knowledge nor\nextensive programming experience. However, the nature of the material\nis somewhat technical.\n\n\nBUS 41000 or BUS 41100. You should be familiar with basic probability\n  and linear regression. If you have not taken either of these\n  courses, you can still take Machine Learning if you have\n  quantitative background. However, in case there are gaps in your\n  background, we will expect that you fill those gaps as soon as\n  possible, or withdraw from the course otherwise.\n\n\nAddition, you should be familiar with R, a platform for statistical\nanalysis.\n\n\nComputing\n\n\nAll computing in class will be conducted in R. The focus of the class\nwill be on teaching machine learning concepts rather than how to use\nR. Some resources for learning R are provided \nhere\n.\n\n\nOther programming languages.\n There are many programming languages\nthat have readily available machine learning libraries. You are free\nto use any of them in your homeworks and projects. However, if you\nchoose to do so, we may not be able to provide much support. In\naddition to R, thanks to Vinh, we will provide some help with Python. \n\n\nTextbooks\n\n\nThere are no required textbooks. All materials notes will be available on the class website. \n\n\nOptional textbooks:\n Books below do not cover all the material we plan to cover in the class. We list both technical books and business related books.\n\n\nAn Introduction to Statistical Learning with Applications in R\n  \n\n\nGareth James, Daniela Witten, Trevor Hastie and Robert Tibshirani\n \n\nThis book provides a great introduction to the of learning. Concepts are well explained, without too much technical details. \n\n\nPDF available online\n\n\nElements of Statistical Learning\n  \n\n\nTrevor Hastie, Robert Tibshirani and Jerome Friedman\n \n\nThis book covers similar material to the one above, however, it provides more technical material. \n\n\nPDF available online\n\n\nMachine Learning: a Probabilistic Perspective\n  \n\n\nKevin Murphy\n \n\nPhD level book. The book provides encyclopedic survey of the area.\n\n\nThe following two books are very light on technical details, but do talk applying machine learning in the context of business applications.\n\n\nData Science for Business\n \n\n\nFoster Provost and Tom Fawcett\n\n\nBig Data, Data Mining, and Machine Learning: Value Creation for Business Leaders and Practitioners\n\n\nJared Dean\n\n\nGrading\n\n\nHomework assignments (\n30%\n), Midterm (\n30%\n), Final project (\n40%\n)\n\n\nThere will be \n8 homework assignments\n that will be due weekly\nexcept week 1 and 6. These assignments can be done in groups (max size\n4). Students should submit only one write-up per group. Homework\nshould be submitted through Chalk.\n\n\nThere is a \ntake-home midterm\n that will be posted in week 5 and\nwill be due in week 6. Students must work individually on the midterm.\n\n\nThe \nfinal project\n can be done in a group. The goal will be to\napply machine learning to a particular business problem. More details\nabout the project can be found \nhere\n.", 
            "title": "Description"
        }, 
        {
            "location": "/Syllabus/", 
            "text": "Lectures\n\n\nThe lecture schedule below is tentative and is subject to change,\ndepending on time and class interests.  We will move at a pace\ndictated by class discussions.  Check this page often for updates.\n\n\n\n\n\n\n\n\nWeek\n\n\nDate\n\n\nContent\n\n\n\n\n\n\n\n\n\n\n1\n\n\n9/24, 9/25, 9/26\n\n\nIntro to  ML, Nearest Neighbours, Bias-variance trade-off\n\n\n\n\n\n\n2\n\n\n10/1, 10/2, 10/3\n\n\nDecision Trees, Random forests\n\n\n\n\n\n\n3\n\n\n10/8, 10/9, 10/10\n\n\nBoosting\n\n\n\n\n\n\n4\n\n\n10/15, 10/16, 10/17\n\n\nReview of linear models, Neural networks\n\n\n\n\n\n\n5\n\n\n10/22, 10/23, 10/24\n\n\nMachine learning in the wild\n\n\n\n\n\n\n6\n\n\n10/29, 10/30, 10/31\n\n\nAnomaly detection\n\n\n\n\n\n\n7\n\n\n11/5, 11/6, 11/7\n\n\nRecommender systems\n\n\n\n\n\n\n8\n\n\n11/12, 11/13, 11/14\n\n\nMinning network data\n\n\n\n\n\n\n9\n\n\n11/19, 11/20, 11/21\n\n\nProbabilistic graphical models, HMMs, Naive Bayes\n\n\n\n\n\n\n10\n\n\n12/3, 12/4, 12/5\n\n\nMinning time series\n\n\n\n\n\n\n11\n\n\n12/11\n\n\nFinal Project Due\n\n\n\n\n\n\n\n\nWeek 1\n\n\nOptional textbook reading:\n\n\nAdditional reading:\n\n\nMachine learning: Trends, perspectives, and prospects\n \n\n\nM. I. Jordan and T. M. Mitchel\n \n\nA \nScience\n review article from two leading experts in Machine Learning.\n\n\nWeek 2\n\n\nWeek 3\n\n\nWeek 4\n\n\nWeek 5\n\n\nWeek 6\n\n\nWeek 7\n\n\nWeek 8\n\n\nWeek 9\n\n\nWeek 10", 
            "title": "Lectures"
        }, 
        {
            "location": "/Syllabus/#lectures", 
            "text": "The lecture schedule below is tentative and is subject to change,\ndepending on time and class interests.  We will move at a pace\ndictated by class discussions.  Check this page often for updates.     Week  Date  Content      1  9/24, 9/25, 9/26  Intro to  ML, Nearest Neighbours, Bias-variance trade-off    2  10/1, 10/2, 10/3  Decision Trees, Random forests    3  10/8, 10/9, 10/10  Boosting    4  10/15, 10/16, 10/17  Review of linear models, Neural networks    5  10/22, 10/23, 10/24  Machine learning in the wild    6  10/29, 10/30, 10/31  Anomaly detection    7  11/5, 11/6, 11/7  Recommender systems    8  11/12, 11/13, 11/14  Minning network data    9  11/19, 11/20, 11/21  Probabilistic graphical models, HMMs, Naive Bayes    10  12/3, 12/4, 12/5  Minning time series    11  12/11  Final Project Due     Week 1  Optional textbook reading:  Additional reading:  Machine learning: Trends, perspectives, and prospects    M. I. Jordan and T. M. Mitchel   \nA  Science  review article from two leading experts in Machine Learning.  Week 2  Week 3  Week 4  Week 5  Week 6  Week 7  Week 8  Week 9  Week 10", 
            "title": "Lectures"
        }, 
        {
            "location": "/Project/", 
            "text": "Project\n\n\nYour class project is an opportunity for you to explore an interesting\nmachine learning problem of your choice in the context of a real-world\ndata set. Your class project must be about new things you have done\nthis semester; you can't use results you have developed in previous\nsemesters. We will provide some project ideas here, but the best idea\nis to combine machine learning with a problem in your area.\n\n\nDeadlines:\n\n\n\n\nProject Proposal: week 7\n\n\nProject Write-up: week 11\n\n\n\n\nProject Proposal\n\n\nProposals should be one page maximum.\n\n\nInclude the following information: \n\n\n\n\nProject title \n\n\nData set \n\n\nProject idea. Describe what you want to achive. What machine learning tools are you going to use? How is the data set going to help you answer your question?\n\n\n\n\nProject Write-up\n\n\nTo be added...\n\n\nProject Ideas\n\n\nTo be added...", 
            "title": "Project"
        }, 
        {
            "location": "/Project/#project", 
            "text": "Your class project is an opportunity for you to explore an interesting\nmachine learning problem of your choice in the context of a real-world\ndata set. Your class project must be about new things you have done\nthis semester; you can't use results you have developed in previous\nsemesters. We will provide some project ideas here, but the best idea\nis to combine machine learning with a problem in your area.  Deadlines:   Project Proposal: week 7  Project Write-up: week 11   Project Proposal  Proposals should be one page maximum.  Include the following information:    Project title   Data set   Project idea. Describe what you want to achive. What machine learning tools are you going to use? How is the data set going to help you answer your question?   Project Write-up  To be added...  Project Ideas  To be added...", 
            "title": "Project"
        }, 
        {
            "location": "/Computing/", 
            "text": "Computing Resources\n\n\nThis page contains some resources for R and Python. We will be using R\nto perform data analysis in the class, however, you are welcome to use\nany other tool/programming language you are familiar with.\n\n\nWe strongly encourage you to get familiar with the basics of R, so\nthat you can focus on machine learning.  We will go through examples\nin R in-class and we will provide some instructions.  We do not expect\nyou to have taken a class that uses R previously. That said, this\nclass is not a class on R.\n\n\nR Resources\n\n\n\n\nRob's notes on R\n\n\nR's Introduction to R\n This is written by stat/computing geeks for stat/computing geeks. It is not always the easiest thing to read. That being said, if you want to learn R, you should read at least the first bit of the chapter on major topics (e.g. data frames). \n\n\nThe optional textbook \nAn introduction to statistical learning\n has a section 2.3 dedicated to basics of R\n\n\nReference card\n\n\nGoogle Tutorial\n\n\nPrinceton Tutorail\n\n\nR Markdown\n Vinh's R Markdown tutorial\n\n\nR data.table\n Vinh's R data.table tutorial\n\n\nGoogle and question answering web-page \nstackoverflow.com\n\n\nThere are many books and tutorials on R. If you find something that you find particularly useful, share it with us on piazza.\n\n\n\n\nPython Resources", 
            "title": "Computing"
        }, 
        {
            "location": "/Computing/#computing-resources", 
            "text": "This page contains some resources for R and Python. We will be using R\nto perform data analysis in the class, however, you are welcome to use\nany other tool/programming language you are familiar with.  We strongly encourage you to get familiar with the basics of R, so\nthat you can focus on machine learning.  We will go through examples\nin R in-class and we will provide some instructions.  We do not expect\nyou to have taken a class that uses R previously. That said, this\nclass is not a class on R.", 
            "title": "Computing Resources"
        }, 
        {
            "location": "/Computing/#r-resources", 
            "text": "Rob's notes on R  R's Introduction to R  This is written by stat/computing geeks for stat/computing geeks. It is not always the easiest thing to read. That being said, if you want to learn R, you should read at least the first bit of the chapter on major topics (e.g. data frames).   The optional textbook  An introduction to statistical learning  has a section 2.3 dedicated to basics of R  Reference card  Google Tutorial  Princeton Tutorail  R Markdown  Vinh's R Markdown tutorial  R data.table  Vinh's R data.table tutorial  Google and question answering web-page  stackoverflow.com  There are many books and tutorials on R. If you find something that you find particularly useful, share it with us on piazza.", 
            "title": "R Resources"
        }, 
        {
            "location": "/Computing/#python-resources", 
            "text": "", 
            "title": "Python Resources"
        }, 
        {
            "location": "/Installation/Computer Operating System Requirements/", 
            "text": "Computer Operating System Requirements\n\n\nIn the following installation guides, we assume that your machine runs on either \nMac\n or \nWindows\n.\n\n\nIf you happen to use Linux or another operating system, certain setups can get hairier and there may be a need to consult\n\nDr. Google\n and \nProf. Stack Overflow\n heavily.\n\n\nYou may contact our kind-hearted Teaching Assistants for individualized assistance, although there is no guarantee we can solve non-Mac, non-Windows problems...", 
            "title": "Computer Operating System Requirements"
        }, 
        {
            "location": "/Installation/Computer Operating System Requirements/#computer-operating-system-requirements", 
            "text": "In the following installation guides, we assume that your machine runs on either  Mac  or  Windows .  If you happen to use Linux or another operating system, certain setups can get hairier and there may be a need to consult Dr. Google  and  Prof. Stack Overflow  heavily.  You may contact our kind-hearted Teaching Assistants for individualized assistance, although there is no guarantee we can solve non-Mac, non-Windows problems...", 
            "title": "Computer Operating System Requirements"
        }, 
        {
            "location": "/Installation/Cygwin/", 
            "text": "Cygwin Installation\n\n\nCygWin is a command-line terminal that enables running Unix-style commands on Windows.\n\n\nGo \nhere\n to download an appropriate installer for your machine\u2019s processor (32-bit / 64-bit) and follow the instructions.", 
            "title": "Cygwin (for Windows users only)"
        }, 
        {
            "location": "/Installation/Cygwin/#cygwin-installation", 
            "text": "CygWin is a command-line terminal that enables running Unix-style commands on Windows.  Go  here  to download an appropriate installer for your machine\u2019s processor (32-bit / 64-bit) and follow the instructions.", 
            "title": "Cygwin Installation"
        }, 
        {
            "location": "/Installation/Git, GitHub & SourceTree/", 
            "text": "Git installation\n\n\nGit is the \nde facto\n go-to solution for version control.\n\n\nGo \nhere\n to download a graphical Git installer appropriate for your machine\u2019s operating system (Mac / Windows).\n\n\nRun the installer and follow its instructions to install the software. Usually the default options are all we need for configuring Git.\n\ufffc\ufffc\ufffc\n\ufffc\ufffc\ufffc\ufffc\n\n\n\ufffcGitHub installation\n\n\nGitHub is the leading online hosting service of Git repositories.\n\n\nGo \nhere\n to register an account if you have not got one.\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\n\n\nSourceTree installation\n\n\nAtlassian\u2019s SourceTree is one of the best desktop apps for managing Git repositories online and offline.\n\n\n\n\nGo \nhere\n to download a graphical installer of SourceTree appropriate for your machine\u2019s operating system (Mac / Windows).\n\n\nRun the installer and follow its instructions to install the software into a folder you prefer.\n\n\nLaunch SourceTree after installation, follow the default recommended basic configurations, and log in with your GitHub account.", 
            "title": "Git, GitHub & SourceTree"
        }, 
        {
            "location": "/Installation/Git, GitHub & SourceTree/#git-installation", 
            "text": "Git is the  de facto  go-to solution for version control.  Go  here  to download a graphical Git installer appropriate for your machine\u2019s operating system (Mac / Windows).  Run the installer and follow its instructions to install the software. Usually the default options are all we need for configuring Git.\n\ufffc\ufffc\ufffc\n\ufffc\ufffc\ufffc\ufffc", 
            "title": "Git installation"
        }, 
        {
            "location": "/Installation/Git, GitHub & SourceTree/#github-installation", 
            "text": "GitHub is the leading online hosting service of Git repositories.  Go  here  to register an account if you have not got one.\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc", 
            "title": "\ufffcGitHub installation"
        }, 
        {
            "location": "/Installation/Git, GitHub & SourceTree/#sourcetree-installation", 
            "text": "Atlassian\u2019s SourceTree is one of the best desktop apps for managing Git repositories online and offline.   Go  here  to download a graphical installer of SourceTree appropriate for your machine\u2019s operating system (Mac / Windows).  Run the installer and follow its instructions to install the software into a folder you prefer.  Launch SourceTree after installation, follow the default recommended basic configurations, and log in with your GitHub account.", 
            "title": "SourceTree installation"
        }, 
        {
            "location": "/Installation/R, RStudio & CRAN Packages/", 
            "text": "R Installation\n\n\nGo \nhere\n to download a graphical installer of the latest R version appropriate for your machine\u2019s\n\n\n\n\nprocessor (32-bit / 64-bit), and\n\n\noperating system (Mac / Windows).\n\n\n\n\nRun the installer and follow its instructions to install the software into a folder you prefer.\n\n\nIt is preferred that the R installation folder path \nDO NOT CONTAIN BLANK SPACES\n, because spaces occasionally cause bugs in dependent open-source software packages.\n\n\nExtra Steps for Windows Users Only\n\n\nWindows users need one extra step to make sure you can run the command \nRscript.exe\n from the command-line terminal.\n\n\n\n\n\n\nGo to \nControl Panel\n \n \nSystem\n \n \nAdvanced System Settings\n \n \nEnvironment Variables\n, look under the \nSystem Variable\n section for the variable \nPath\n, and append the following path to the existing text:\n\n\n;\nYour R Installation Folder\n/bin\n\n\n(note that there should be a semi-colon (\n;\n) separating the existing path and the appended path, and that there must be no space between that semi-colon and the appended path)\n\n\n\n\n\n\nOpen the command-line terminal via \nStart Menu\n \n \nRun\n \n \ncmd\n. Enter the following command and verify that it returns the folder path containing the \nRscript.exe\n file:\n\n\nwhere Rscript\n\n\n\n\n\n\nRStudio Installation\n\n\nRStudio is the most popular integrated development environment (IDE) for R.\n\n\nGo \nhere\n to download a graphical installer of RStudio appropriate for your machine\u2019s\n\n\n\n\nprocessor (32-bit / 64-bit), and\n\n\noperating system (Mac / Windows).\n\n\n\n\nRun the installer and follow its instructions to install the software into a folder you prefer.\n\n\nCRAN Packages Installation\n\n\nWe need to install a number of packages from the \nComprehensive R Archive Network\n (\nCRAN\n), a repository of open-source packages developed in R.\n\n\n\n\n\n\nFirst, make sure you have cloned and synchronized the \ncourse GitHub repository\n onto your machine;\n\n\n\n\n\n\nOpen the command-line terminal:\n\n\n\n\nMac\n: via the \niTerm\n app\n\n\nWindows\n: via \nStart Menu\n \n \nRun\n \n \ncmd\n;\n\n\n\n\n\n\n\n\nNavigate to the \n[Your Course Repository Folder]\n/Software/R/\n folder; and\n\n\n\n\n\n\nRun the command \nRscript RInstallPackages.R\n to install the R packages necessary for this course", 
            "title": "R, RStudio & CRAN Packages"
        }, 
        {
            "location": "/Installation/R, RStudio & CRAN Packages/#r-installation", 
            "text": "Go  here  to download a graphical installer of the latest R version appropriate for your machine\u2019s   processor (32-bit / 64-bit), and  operating system (Mac / Windows).   Run the installer and follow its instructions to install the software into a folder you prefer.  It is preferred that the R installation folder path  DO NOT CONTAIN BLANK SPACES , because spaces occasionally cause bugs in dependent open-source software packages.", 
            "title": "R Installation"
        }, 
        {
            "location": "/Installation/R, RStudio & CRAN Packages/#extra-steps-for-windows-users-only", 
            "text": "Windows users need one extra step to make sure you can run the command  Rscript.exe  from the command-line terminal.    Go to  Control Panel     System     Advanced System Settings     Environment Variables , look under the  System Variable  section for the variable  Path , and append the following path to the existing text:  ; Your R Installation Folder /bin  (note that there should be a semi-colon ( ; ) separating the existing path and the appended path, and that there must be no space between that semi-colon and the appended path)    Open the command-line terminal via  Start Menu     Run     cmd . Enter the following command and verify that it returns the folder path containing the  Rscript.exe  file:  where Rscript", 
            "title": "Extra Steps for Windows Users Only"
        }, 
        {
            "location": "/Installation/R, RStudio & CRAN Packages/#rstudio-installation", 
            "text": "RStudio is the most popular integrated development environment (IDE) for R.  Go  here  to download a graphical installer of RStudio appropriate for your machine\u2019s   processor (32-bit / 64-bit), and  operating system (Mac / Windows).   Run the installer and follow its instructions to install the software into a folder you prefer.", 
            "title": "RStudio Installation"
        }, 
        {
            "location": "/Installation/R, RStudio & CRAN Packages/#cran-packages-installation", 
            "text": "We need to install a number of packages from the  Comprehensive R Archive Network  ( CRAN ), a repository of open-source packages developed in R.    First, make sure you have cloned and synchronized the  course GitHub repository  onto your machine;    Open the command-line terminal:   Mac : via the  iTerm  app  Windows : via  Start Menu     Run     cmd ;     Navigate to the  [Your Course Repository Folder] /Software/R/  folder; and    Run the command  Rscript RInstallPackages.R  to install the R packages necessary for this course", 
            "title": "CRAN Packages Installation"
        }, 
        {
            "location": "/Installation/Python Anaconda, PyCharm IDE, and Conda & PyPI Packages/", 
            "text": "Python Installation\n\n\nWe recommend Continuum Analytics\u2019 Anaconda distribution of Python v\n2.7\n and compatible popular scientific computation packages.\n\n\nGo \nhere\n to download a graphical installer appropriate for your machine\u2019s\n\n\n\n\nprocessor (32-bit / 64-bit), and\n\n\noperating system (Mac / Windows).\n\n\n\n\nRun the installer and follow its instructions to install the software into a folder you prefer.\n\n\nNote that the Anaconda installation folder path \nMUST NOT CONTAIN BLANK SPACES\n, because spaces occasionally cause bugs in dependent open-source software packages.\n\ufffc\ufffc\ufffc\n\ufffc\ufffc\ufffc\ufffc\n\n\n\ufffc\nAnaconda Academic License\n\n\nContinuum offers free Anaconda advanced computation optimization add-ons for academic use.\n\n\nYou may obtain an Academic License \nhere\n and follow the instructions in the company\u2019s email after you submit your request.\n\n\n\n\nAmong all things, this Academic License gives you a free upgrade of the default BLAS (Basic Linear Algebra Subprograms) libraries of Anaconda Python to Intel\u2019s Math Kernel Library (MKL), which is among the fastest BLAS\u2019es around. This enables faster math, saving time for you and your machine \u2013 \nand, hell yeah, salvaging a precious little bit more of your machine\u2019s \nresale value\n! \n\n\n\n\n(The commands to install MKL are already included in the pre-included installation script file discussed in section \nAdditional Conda \n PyPI Packages Installation\n below)\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\n\n\nJetBrains PyCharm IDE Installation \n[Recommended but Optional]\n\n\nJetBrains, a vendor of popular integrated development environments (IDEs) for professional software developers, has an excellent IDE named PyCharm for Python.\n\n\nWe recommend PyCharm, but you may feel free to go with any ther Python IDE(s) of your own choice.\n\n\nIf you do opt for PyCharm, go \nhere\n to download its free Community Edition and install it onto your machine.\n\n\nNote:\n you typically need to manually configure your installed IDE (PyCharm or other) to link it to the a Python backend (\u201cPython interpreter\u201d). There should be easy-to-follow online guides on how to do this for each IDE.\n\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\n\n\nAdditional Conda \n PyPI Packages Installation\n\n\nWe need to install a number of packages from both Continuum Analytics\u2019 Anaconda and the Python Package Index (PyPI).\n\n\n\n\n\n\nFirst, make sure you have cloned and synchronized the \ncourse GitHub repository\n onto your machine;\n\n\n\n\n\n\nOpen the command-line terminal:\n\n\n\n\nMac\n: via the \niTerm\n app\n\n\nWindows\n: via the \nCygwin\n terminal;\n\n\n\n\n\n\n\n\nNavigate to the \n[Your Course Repository Folder]\n/Software/Python/\n folder; and\n\n\n\n\n\n\nRun the folllowing command: \nsh PythonInstallPackages.sh", 
            "title": "Python Anaconda, PyCharm IDE, and Conda & PyPI Packages"
        }, 
        {
            "location": "/Installation/Python Anaconda, PyCharm IDE, and Conda & PyPI Packages/#python-installation", 
            "text": "We recommend Continuum Analytics\u2019 Anaconda distribution of Python v 2.7  and compatible popular scientific computation packages.  Go  here  to download a graphical installer appropriate for your machine\u2019s   processor (32-bit / 64-bit), and  operating system (Mac / Windows).   Run the installer and follow its instructions to install the software into a folder you prefer.  Note that the Anaconda installation folder path  MUST NOT CONTAIN BLANK SPACES , because spaces occasionally cause bugs in dependent open-source software packages.\n\ufffc\ufffc\ufffc\n\ufffc\ufffc\ufffc\ufffc", 
            "title": "Python Installation"
        }, 
        {
            "location": "/Installation/Python Anaconda, PyCharm IDE, and Conda & PyPI Packages/#anaconda-academic-license", 
            "text": "Continuum offers free Anaconda advanced computation optimization add-ons for academic use.  You may obtain an Academic License  here  and follow the instructions in the company\u2019s email after you submit your request.   Among all things, this Academic License gives you a free upgrade of the default BLAS (Basic Linear Algebra Subprograms) libraries of Anaconda Python to Intel\u2019s Math Kernel Library (MKL), which is among the fastest BLAS\u2019es around. This enables faster math, saving time for you and your machine \u2013  and, hell yeah, salvaging a precious little bit more of your machine\u2019s  resale value !    (The commands to install MKL are already included in the pre-included installation script file discussed in section  Additional Conda   PyPI Packages Installation  below)\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc", 
            "title": "\ufffcAnaconda Academic License"
        }, 
        {
            "location": "/Installation/Python Anaconda, PyCharm IDE, and Conda & PyPI Packages/#jetbrains-pycharm-ide-installation-recommended-but-optional", 
            "text": "JetBrains, a vendor of popular integrated development environments (IDEs) for professional software developers, has an excellent IDE named PyCharm for Python.  We recommend PyCharm, but you may feel free to go with any ther Python IDE(s) of your own choice.  If you do opt for PyCharm, go  here  to download its free Community Edition and install it onto your machine.  Note:  you typically need to manually configure your installed IDE (PyCharm or other) to link it to the a Python backend (\u201cPython interpreter\u201d). There should be easy-to-follow online guides on how to do this for each IDE. \n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc", 
            "title": "JetBrains PyCharm IDE Installation [Recommended but Optional]"
        }, 
        {
            "location": "/Installation/Python Anaconda, PyCharm IDE, and Conda & PyPI Packages/#additional-conda-pypi-packages-installation", 
            "text": "We need to install a number of packages from both Continuum Analytics\u2019 Anaconda and the Python Package Index (PyPI).    First, make sure you have cloned and synchronized the  course GitHub repository  onto your machine;    Open the command-line terminal:   Mac : via the  iTerm  app  Windows : via the  Cygwin  terminal;     Navigate to the  [Your Course Repository Folder] /Software/Python/  folder; and    Run the folllowing command:  sh PythonInstallPackages.sh", 
            "title": "Additional Conda &amp; PyPI Packages Installation"
        }, 
        {
            "location": "/Installation/Python Theano/", 
            "text": "Theano: Overview\n\n\nTheano is a Python library that enables using a compatible GPU (Graphical Processing Unit) of the computer for numerical computation, which is far superior in performance terms to computation by the computer\u2019s CPU (Central Processing Unit).\n\n\n\n\n\n\nCurrently, the most, if not only, effectively Theano-supported GPUs are those by NVIDIA\n\n\n\n\n\n\nEven if your machine do not have an NVIDIA graphics card, Theano is still useful in compiling complex calculations down to highly efficient C / C++ or machine code that can execute very fast\n\ufffc\ufffc\ufffc\n\n\n\n\n\n\nBecause of its huge performance-boosting benefits, Theano is prominent in extremely data-intensive, large-scale Machine Learning applications such as those in cutting-edge Neural Networks-based Deep Learning.\n\n\nHaving said that, Theano is still very young (\n\"young\"\n = nice word for \n\"buggy\"\n) and its setup, configuration and usage demand a high degree of risk-taking and perseverance. :( \n(It helps if you are good with your friends and hence enjoy good karma)\n\n\nWe will hence use Theano only on a \nlimited, experimental basis\n for some exercises in Neural Networks, and we will install it in such a way that if your computer does not have an NVIDIA GPU, Theano will fall back to NumPy, which is Python\u2019s default numerical computation library.\n\n\nIn case you are unsuccessful in struggling through the Theano installation, we will use a non-Theano-dependent library for the Neural Networks exercises.\n\n\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\n\n\n\ufffcTheano Installation and Configuration on Mac\n\n\nYou may refer to the Theano installation and configuration guide for Mac \nhere\n.\n\n\nAppropriate steps vary from machine to machine. Consult \nDr. Google\n and \n*Prof. Stack Overflow\n whenever you get stuck.\n\n\nIn the Teaching Assistants\u2019 own experience, the recommended key steps include:\n\n\n\n\nInstall the \nAnaconda Python v2.7 distribution\n *(this should be already done, per instructions in a previous section)\n\n\nInstall the \nadditional Conda \n PyPI packages\n per instructions in the previous section\n\n\nInstall the Clang compiler through installing the \nXCode app\n from the Apple App Store and running XCode once to install its command-line tools\n\n\nInstall the \nCUDA graphics driver and toolkit v7\n from NDIVIA in order to use the GPU to perform numerical computation\n\n\nCopy the \n.theanorc\n file in the \n[Your Course Repository Folder]\n*/Software/Python/Theano/Mac\n folder to the \n/\n[Your Username]\n/\n home folder, customize the copied file (NOT the original file) according to the comments, and save it\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\nOne common source of error in setting up Theano on Mac concerns the BLAS (Basic Linear Algebra Subprograms) libraries\n\n\nRefer \nhere\n for some troubleshooting guidance on this issue Verification steps:\n\n\n\n\nRun the \nTheanoTestScript.py\n file in the \n[Your Course Repository Folder]\n/Software/Python/Theano/\n folder, either via your Python IDE or through the terminal, and verify that it completes successfully, giving your a comparison of speeds between NumPy and Theano\n\ufffc\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\n\n\n\ufffcTheano Installation and Configuration on Windows\n\n\nYou may refer to the Theano installation and configuration guide for Windows \nhere\n.\n\n\nAppropriate steps vary from machine to machine. Consult \nDr. Google\n and \nProf. Stack Overflow\n whenever you get stuck.\n\n\nIn the Teaching Assistants\u2019 own experience, the recommended key steps include:\n\n\n\n\nInstall the \nAnaconda Python v2.7 distribution\n *(this should be already done, per instructions in a previous section)\n\n\nInstall the \nadditional Conda \n PyPI packages\n per instructions in the previous section\n\n\nFind and install \nVisual Studio Community 2013\n\n\ndo \nNOT\n install the 2015 version, which is not compatible with the CUDA software below\n\n\n\n\n\n\nInstall the \nCUDA graphics driver and toolkit v7\n from NDIVIA in order to use the GPU to perform numerical computation\n\n\nInstall the \nMicrosoft Visual C++ Compiler for Python v2.7\n\n\nInstall a \nGNU C Compiler (GCC)\n such as \nthis\n\n\nInstall \nGraphViz\n into a folder whose path has \nno blank spaces\n\n\nOpen the \npydot.py\n file in the \n[Your Anaconda Installation Folder]\n/lib/site-packages/\n folder. Locate the \n_find_graphviz\n function, comment its whole content out and replace with the following: \nreturn _find_executables(\u2018[YOUR GRAPHVIZ INSTALLATION FOLDER]/bin\u2019)\n\n\n\n\nCopy the \n.theanorc\n file under \n[Your Course Repository Folder]\n/Software Guides/Python/Theano/Windows/\n folder to \nC:/Users/\n[Your Windows User Name]\n/.theano/\n folder, customize the copied file (NOT the original file) according to the comments, and save it\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\nVerification steps: open your \n*CygWin terminal\nand:\n\n\n\n\n\n\nrun \nwhere gcc\n and verify that the path to your GCC installation\u2019s \ngcc.exe\n file appears\n\n\n\n\nrun \nwhere nvcc\n and verify that the path to your CUDA installation\u2019s \nnvcc.exe\n file appears\n\n\nrun the \nTheanoTestScript.py\n file under \n[Your Course Repository Folder]\n/Software Guides/Python/Theano/\n, either via your Python IDE or through the terminal, and verify that it completes successfully, giving your a comparison of speeds between NumPy and Theano\n\ufffc\ufffc\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\n\n\n\n\n\ufffcTheano Configurations \n[for info only]\n\n\nTheano has a large number of configuration levers, the most common of which are discussed \nhere\n.\n\n\nYou do not need to pay attention to those for this course.", 
            "title": "Python Theano package"
        }, 
        {
            "location": "/Installation/Python Theano/#theano-overview", 
            "text": "Theano is a Python library that enables using a compatible GPU (Graphical Processing Unit) of the computer for numerical computation, which is far superior in performance terms to computation by the computer\u2019s CPU (Central Processing Unit).    Currently, the most, if not only, effectively Theano-supported GPUs are those by NVIDIA    Even if your machine do not have an NVIDIA graphics card, Theano is still useful in compiling complex calculations down to highly efficient C / C++ or machine code that can execute very fast\n\ufffc\ufffc\ufffc    Because of its huge performance-boosting benefits, Theano is prominent in extremely data-intensive, large-scale Machine Learning applications such as those in cutting-edge Neural Networks-based Deep Learning.  Having said that, Theano is still very young ( \"young\"  = nice word for  \"buggy\" ) and its setup, configuration and usage demand a high degree of risk-taking and perseverance. :(  (It helps if you are good with your friends and hence enjoy good karma)  We will hence use Theano only on a  limited, experimental basis  for some exercises in Neural Networks, and we will install it in such a way that if your computer does not have an NVIDIA GPU, Theano will fall back to NumPy, which is Python\u2019s default numerical computation library.  In case you are unsuccessful in struggling through the Theano installation, we will use a non-Theano-dependent library for the Neural Networks exercises.  \ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc", 
            "title": "Theano: Overview"
        }, 
        {
            "location": "/Installation/Python Theano/#theano-installation-and-configuration-on-mac", 
            "text": "You may refer to the Theano installation and configuration guide for Mac  here .  Appropriate steps vary from machine to machine. Consult  Dr. Google  and  *Prof. Stack Overflow  whenever you get stuck.  In the Teaching Assistants\u2019 own experience, the recommended key steps include:   Install the  Anaconda Python v2.7 distribution  *(this should be already done, per instructions in a previous section)  Install the  additional Conda   PyPI packages  per instructions in the previous section  Install the Clang compiler through installing the  XCode app  from the Apple App Store and running XCode once to install its command-line tools  Install the  CUDA graphics driver and toolkit v7  from NDIVIA in order to use the GPU to perform numerical computation  Copy the  .theanorc  file in the  [Your Course Repository Folder] */Software/Python/Theano/Mac  folder to the  / [Your Username] /  home folder, customize the copied file (NOT the original file) according to the comments, and save it\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\nOne common source of error in setting up Theano on Mac concerns the BLAS (Basic Linear Algebra Subprograms) libraries  Refer  here  for some troubleshooting guidance on this issue Verification steps:   Run the  TheanoTestScript.py  file in the  [Your Course Repository Folder] /Software/Python/Theano/  folder, either via your Python IDE or through the terminal, and verify that it completes successfully, giving your a comparison of speeds between NumPy and Theano\n\ufffc\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc", 
            "title": "\ufffcTheano Installation and Configuration on Mac"
        }, 
        {
            "location": "/Installation/Python Theano/#theano-installation-and-configuration-on-windows", 
            "text": "You may refer to the Theano installation and configuration guide for Windows  here .  Appropriate steps vary from machine to machine. Consult  Dr. Google  and  Prof. Stack Overflow  whenever you get stuck.  In the Teaching Assistants\u2019 own experience, the recommended key steps include:   Install the  Anaconda Python v2.7 distribution  *(this should be already done, per instructions in a previous section)  Install the  additional Conda   PyPI packages  per instructions in the previous section  Find and install  Visual Studio Community 2013  do  NOT  install the 2015 version, which is not compatible with the CUDA software below    Install the  CUDA graphics driver and toolkit v7  from NDIVIA in order to use the GPU to perform numerical computation  Install the  Microsoft Visual C++ Compiler for Python v2.7  Install a  GNU C Compiler (GCC)  such as  this  Install  GraphViz  into a folder whose path has  no blank spaces  Open the  pydot.py  file in the  [Your Anaconda Installation Folder] /lib/site-packages/  folder. Locate the  _find_graphviz  function, comment its whole content out and replace with the following:  return _find_executables(\u2018[YOUR GRAPHVIZ INSTALLATION FOLDER]/bin\u2019)   Copy the  .theanorc  file under  [Your Course Repository Folder] /Software Guides/Python/Theano/Windows/  folder to  C:/Users/ [Your Windows User Name] /.theano/  folder, customize the copied file (NOT the original file) according to the comments, and save it\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\nVerification steps: open your  *CygWin terminal and:    run  where gcc  and verify that the path to your GCC installation\u2019s  gcc.exe  file appears   run  where nvcc  and verify that the path to your CUDA installation\u2019s  nvcc.exe  file appears  run the  TheanoTestScript.py  file under  [Your Course Repository Folder] /Software Guides/Python/Theano/ , either via your Python IDE or through the terminal, and verify that it completes successfully, giving your a comparison of speeds between NumPy and Theano\n\ufffc\ufffc\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc", 
            "title": "\ufffcTheano Installation and Configuration on Windows"
        }, 
        {
            "location": "/Installation/Python Theano/#theano-configurations-for-info-only", 
            "text": "Theano has a large number of configuration levers, the most common of which are discussed  here .  You do not need to pay attention to those for this course.", 
            "title": "\ufffcTheano Configurations [for info only]"
        }, 
        {
            "location": "/Computing/R Markdown Tutorial/", 
            "text": "R Markdown\n Tutorial\n\n\nR Markdown is a text file format that combines:\n\n\n\n\nR code for data analysis, and\n\n\ntext for telling a story / writing a report on your analysis\n\n\n\n\nThink of R Markdown as a way for you to write up your project report and code up your math at the same time, in the same place.\n\n\nThis tutorial provides an example script to illustrate how to use R Markdown. Please go through the following steps:\n\n\n\n\nDownload this \nR Markdown (.Rmd) script\n onto your local disk drive\n\n\nOpen the downloaded R Markdown script in RStudio\n\n\nMake sure the \nrmarkdown\n package is installed in R. If not, run the command \ninstall.packages('rmarkdown')\n in RStudio\n\n\nIn the text-editing window in RStudio, just below the file name, find and press the \"\nKnit PDF\n\" button, which will read the content of the script and convert it to a PDF document in the same folder as your R Markdown script file\n\n\nInspect the R Markdown script file thoroughly and look at the PDF output to see how the \n.Rmd\n input is rendered in the final output", 
            "title": "R Markdown"
        }, 
        {
            "location": "/Computing/R Markdown Tutorial/#r-markdown-tutorial", 
            "text": "R Markdown is a text file format that combines:   R code for data analysis, and  text for telling a story / writing a report on your analysis   Think of R Markdown as a way for you to write up your project report and code up your math at the same time, in the same place.  This tutorial provides an example script to illustrate how to use R Markdown. Please go through the following steps:   Download this  R Markdown (.Rmd) script  onto your local disk drive  Open the downloaded R Markdown script in RStudio  Make sure the  rmarkdown  package is installed in R. If not, run the command  install.packages('rmarkdown')  in RStudio  In the text-editing window in RStudio, just below the file name, find and press the \" Knit PDF \" button, which will read the content of the script and convert it to a PDF document in the same folder as your R Markdown script file  Inspect the R Markdown script file thoroughly and look at the PDF output to see how the  .Rmd  input is rendered in the final output", 
            "title": "R Markdown Tutorial"
        }, 
        {
            "location": "/Computing/R data.table Tutorial/", 
            "text": "R data.table\n tutorial\n\n\ndata.table\n is an advanced alternative to R's default data.frame. It offers enhanced time performance and additional capabilities that are useful in data processing tasks.\n\n\nDownload this \nR Markdown script file\n, open it in the RStudio IDE, and \"Knit PDF\" it to understand the notable features of data.table.", 
            "title": "R data.table"
        }, 
        {
            "location": "/Computing/R data.table Tutorial/#r-datatable-tutorial", 
            "text": "data.table  is an advanced alternative to R's default data.frame. It offers enhanced time performance and additional capabilities that are useful in data processing tasks.  Download this  R Markdown script file , open it in the RStudio IDE, and \"Knit PDF\" it to understand the notable features of data.table.", 
            "title": "R data.table tutorial"
        }, 
        {
            "location": "/Links/", 
            "text": "Links\n\n\n\n\nSyllabus\n\n\nCourse Materials repository\n on GitHub.com\n\n\nDiscussion Forum\n on Piazza.com", 
            "title": "Resources"
        }, 
        {
            "location": "/Links/#links", 
            "text": "Syllabus  Course Materials repository  on GitHub.com  Discussion Forum  on Piazza.com", 
            "title": "Links"
        }
    ]
}