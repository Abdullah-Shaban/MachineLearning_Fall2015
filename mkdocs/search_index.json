{
    "docs": [
        {
            "location": "/", 
            "text": "Machine Learning\n (41204) @ Chicago Booth\n\n\nIf you are visiting this site in Fall 2015, we predict with \n90% confidence (and 110% excitement! \n) that you're among the Booth students who, together with us, make some nice history. \n\n\nThis inaugural Machine Learning course specially tailored for MBAs is the \nVERY FIRST OF ITS KIND in any curricula of the leading U.S. and international business schools\n that we know of.\n\n\nAdvanced Machine Learning is the very core of modern Data Analytics, which companies big and small are leveraging to mine commercial value out of their increasing vast troves of information.\n\n\nThis course aims to give you a 10-week tasting session on a diverse buffet of popular, powerful and highly practical Machine Learning algorithms, with the hope that what you take away here will help you rise up to data-enabled commercial opportunities in your later careers.\n\n\nThe main programming language for this course is \nR\n \n(which we are proposing to our Deans to be a strict Booth admission prerequisite in addition to GMAT from 2016-2017...)\n. In addition, another major innovation in this course is an option for you to do programming in \nPython\n if you so choose. That's double work for us, but hopefully more than double joy to you. \n\n\nEnjoy!\n\n\nP.S.\n: For this very first offering, we ask for your cooperation and patience if Murphy's Law ever gets activated.\n\n\nIMPORTANT: Course Materials Repository on GitHub.com\n\n\nAll of our course materials will be published through a this \nrepository on GitHub.com\n.\n\n\n\n\nThat means our UChicago Chalk site will be as quite as an autumn lake - it may only have your grades; for everything else, go to this repo.\n\n\n\n\nThe very first thing you should do is to follow to these \nGit, GitHub and SourceTree installation guides\n to install the necessary Git-related software, and then \nclone\n this online repo onto a folder on your machine's hard drive.\n\n\n\n\nWe will hitherto refer to that cloned folder \"\n[Your Course Repository Folder]\n\"\n\n\n\n\nThe \nSourceTree\n app has a simple \n\"Pull\"\n button for you to obtain any changes / updates / additions we make to the course materials. After each pull, you have 100% of whatever we have. No more sweat shed on manually downloading slides / files from Chalk.\n\n\nCourse Discussion Forum on Piazza.com\n\n\nOur discussion forum is hosted \nhere\n on Piazza.\n\n\nIf we answer your questions after 2am, consider sending a rose...", 
            "title": "<i class=\"fa fa-home\"></i>"
        }, 
        {
            "location": "/#machine-learning-41204-chicago-booth", 
            "text": "If you are visiting this site in Fall 2015, we predict with  90% confidence (and 110% excitement!  ) that you're among the Booth students who, together with us, make some nice history.   This inaugural Machine Learning course specially tailored for MBAs is the  VERY FIRST OF ITS KIND in any curricula of the leading U.S. and international business schools  that we know of.  Advanced Machine Learning is the very core of modern Data Analytics, which companies big and small are leveraging to mine commercial value out of their increasing vast troves of information.  This course aims to give you a 10-week tasting session on a diverse buffet of popular, powerful and highly practical Machine Learning algorithms, with the hope that what you take away here will help you rise up to data-enabled commercial opportunities in your later careers.  The main programming language for this course is  R   (which we are proposing to our Deans to be a strict Booth admission prerequisite in addition to GMAT from 2016-2017...) . In addition, another major innovation in this course is an option for you to do programming in  Python  if you so choose. That's double work for us, but hopefully more than double joy to you.   Enjoy!  P.S. : For this very first offering, we ask for your cooperation and patience if Murphy's Law ever gets activated.", 
            "title": "Machine Learning (41204) @ Chicago Booth"
        }, 
        {
            "location": "/#important-course-materials-repository-on-githubcom", 
            "text": "All of our course materials will be published through a this  repository on GitHub.com .   That means our UChicago Chalk site will be as quite as an autumn lake - it may only have your grades; for everything else, go to this repo.   The very first thing you should do is to follow to these  Git, GitHub and SourceTree installation guides  to install the necessary Git-related software, and then  clone  this online repo onto a folder on your machine's hard drive.   We will hitherto refer to that cloned folder \" [Your Course Repository Folder] \"   The  SourceTree  app has a simple  \"Pull\"  button for you to obtain any changes / updates / additions we make to the course materials. After each pull, you have 100% of whatever we have. No more sweat shed on manually downloading slides / files from Chalk.", 
            "title": "IMPORTANT: Course Materials Repository on GitHub.com"
        }, 
        {
            "location": "/#course-discussion-forum-on-piazzacom", 
            "text": "Our discussion forum is hosted  here  on Piazza.  If we answer your questions after 2am, consider sending a rose...", 
            "title": "Course Discussion Forum on Piazza.com"
        }, 
        {
            "location": "/Lectures/Lecture Week 01/", 
            "text": "Lecture Week 01\n\n\nPlease view lecture slides \nhere\n.", 
            "title": "Week 01"
        }, 
        {
            "location": "/Lectures/Lecture Week 01/#lecture-week-01", 
            "text": "Please view lecture slides  here .", 
            "title": "Lecture Week 01"
        }, 
        {
            "location": "/Lectures/Lecture Week 02/", 
            "text": "Lecture Week 02\n\n\nPlease view lecture slides \nhere\n.", 
            "title": "Week 02"
        }, 
        {
            "location": "/Lectures/Lecture Week 02/#lecture-week-02", 
            "text": "Please view lecture slides  here .", 
            "title": "Lecture Week 02"
        }, 
        {
            "location": "/Lectures/Lecture Week 03/", 
            "text": "Lecture Week 03\n\n\nPlease view lecture slides \nhere\n.", 
            "title": "Week 03"
        }, 
        {
            "location": "/Lectures/Lecture Week 03/#lecture-week-03", 
            "text": "Please view lecture slides  here .", 
            "title": "Lecture Week 03"
        }, 
        {
            "location": "/Lectures/Lecture Week 04/", 
            "text": "Lecture Week 04\n\n\nPlease view lecture slides \nhere\n.", 
            "title": "Week 04"
        }, 
        {
            "location": "/Lectures/Lecture Week 04/#lecture-week-04", 
            "text": "Please view lecture slides  here .", 
            "title": "Lecture Week 04"
        }, 
        {
            "location": "/Lectures/Lecture Week 05/", 
            "text": "Lecture Week 05\n\n\nPlease view lecture slides \nhere\n.", 
            "title": "Week 05"
        }, 
        {
            "location": "/Lectures/Lecture Week 05/#lecture-week-05", 
            "text": "Please view lecture slides  here .", 
            "title": "Lecture Week 05"
        }, 
        {
            "location": "/Lectures/Lecture Week 06/", 
            "text": "Lecture Week 06\n\n\nPlease view lecture slides \nhere\n.", 
            "title": "Week 06"
        }, 
        {
            "location": "/Lectures/Lecture Week 06/#lecture-week-06", 
            "text": "Please view lecture slides  here .", 
            "title": "Lecture Week 06"
        }, 
        {
            "location": "/Lectures/Lecture Week 07/", 
            "text": "Lecture Week 07\n\n\nPlease view lecture slides \nhere\n.", 
            "title": "Week 07"
        }, 
        {
            "location": "/Lectures/Lecture Week 07/#lecture-week-07", 
            "text": "Please view lecture slides  here .", 
            "title": "Lecture Week 07"
        }, 
        {
            "location": "/Lectures/Lecture Week 08/", 
            "text": "Lecture Week 08\n\n\nPlease view lecture slides \nhere\n.", 
            "title": "Week 08"
        }, 
        {
            "location": "/Lectures/Lecture Week 08/#lecture-week-08", 
            "text": "Please view lecture slides  here .", 
            "title": "Lecture Week 08"
        }, 
        {
            "location": "/Lectures/Lecture Week 09/", 
            "text": "Lecture Week 09\n\n\nPlease view lecture slides \nhere\n.", 
            "title": "Week 09"
        }, 
        {
            "location": "/Lectures/Lecture Week 09/#lecture-week-09", 
            "text": "Please view lecture slides  here .", 
            "title": "Lecture Week 09"
        }, 
        {
            "location": "/Lectures/Lecture Week 10/", 
            "text": "Lecture Week 10\n\n\nPlease view lecture slides \nhere\n.", 
            "title": "Week 10"
        }, 
        {
            "location": "/Lectures/Lecture Week 10/#lecture-week-10", 
            "text": "Please view lecture slides  here .", 
            "title": "Lecture Week 10"
        }, 
        {
            "location": "/Installation/Computer Operating System Requirements/", 
            "text": "Computer Operating System Requirements\n\n\nIn the following installation guides, we assume that your machine runs on either \nMac\n or \nWindows\n.\n\n\nIf you happen to use Linux or another operating system, certain setups can get hairier and there may be a need to consult\n\nDr. Google\n and \nProf. Stack Overflow\n heavily.\n\n\nYou may contact our kind-hearted Teaching Assistants for individualized assistance, although there is no guarantee we can solve non-Mac, non-Windows problems...", 
            "title": "Computer Operating System Requirements"
        }, 
        {
            "location": "/Installation/Computer Operating System Requirements/#computer-operating-system-requirements", 
            "text": "In the following installation guides, we assume that your machine runs on either  Mac  or  Windows .  If you happen to use Linux or another operating system, certain setups can get hairier and there may be a need to consult Dr. Google  and  Prof. Stack Overflow  heavily.  You may contact our kind-hearted Teaching Assistants for individualized assistance, although there is no guarantee we can solve non-Mac, non-Windows problems...", 
            "title": "Computer Operating System Requirements"
        }, 
        {
            "location": "/Installation/Cygwin/", 
            "text": "Cygwin Installation\n\n\nCygWin is a command-line terminal that enables running Unix-style commands on Windows.\n\n\nGo \nhere\n to download an appropriate installer for your machine\u2019s processor (32-bit / 64-bit) and follow the instructions.", 
            "title": "Cygwin (for Windows users only)"
        }, 
        {
            "location": "/Installation/Cygwin/#cygwin-installation", 
            "text": "CygWin is a command-line terminal that enables running Unix-style commands on Windows.  Go  here  to download an appropriate installer for your machine\u2019s processor (32-bit / 64-bit) and follow the instructions.", 
            "title": "Cygwin Installation"
        }, 
        {
            "location": "/Installation/Git, GitHub & SourceTree/", 
            "text": "Git installation\n\n\nGit is the de facto go-to solution for version control.\n\n\nGo \nhere\n to download a graphical Git installer appropriate for your machine\u2019s operating system (Mac / Windows).\n\n\nRun the installer and follow its instructions to install the software. Usually the default options are all we need for configuring Git.\n\ufffc\ufffc\ufffc\n\ufffc\ufffc\ufffc\ufffc\n\n\n\ufffcGitHub installation\n\n\nGitHub is the leading online hosting service of Git repositories.\n\n\nGo \nhere\n to register an account if you have not got one.\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\n\n\nSourceTree installation\n\n\nAtlassian\u2019s SourceTree is one of the best desktop apps for managing Git repositories online and offline.\n\n\n\n\nGo \nhere\n to download a graphical installer of SourceTree appropriate for your machine\u2019s operating system (Mac / Windows).\n\n\nRun the installer and follow its instructions to install the software into a folder you prefer.\n\n\nLaunch SourceTree after installation, follow the default recommended basic configurations, and log in with your GitHub account.", 
            "title": "Git, GitHub & SourceTree"
        }, 
        {
            "location": "/Installation/Git, GitHub & SourceTree/#git-installation", 
            "text": "Git is the de facto go-to solution for version control.  Go  here  to download a graphical Git installer appropriate for your machine\u2019s operating system (Mac / Windows).  Run the installer and follow its instructions to install the software. Usually the default options are all we need for configuring Git.\n\ufffc\ufffc\ufffc\n\ufffc\ufffc\ufffc\ufffc", 
            "title": "Git installation"
        }, 
        {
            "location": "/Installation/Git, GitHub & SourceTree/#github-installation", 
            "text": "GitHub is the leading online hosting service of Git repositories.  Go  here  to register an account if you have not got one.\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc", 
            "title": "\ufffcGitHub installation"
        }, 
        {
            "location": "/Installation/Git, GitHub & SourceTree/#sourcetree-installation", 
            "text": "Atlassian\u2019s SourceTree is one of the best desktop apps for managing Git repositories online and offline.   Go  here  to download a graphical installer of SourceTree appropriate for your machine\u2019s operating system (Mac / Windows).  Run the installer and follow its instructions to install the software into a folder you prefer.  Launch SourceTree after installation, follow the default recommended basic configurations, and log in with your GitHub account.", 
            "title": "SourceTree installation"
        }, 
        {
            "location": "/Installation/R, RStudio & CRAN Packages/", 
            "text": "R Installation\n\n\nGo \nhere\n to download a graphical installer of the latest R version appropriate for your machine\u2019s\n\n\n\n\nprocessor (32-bit / 64-bit), and\n\n\noperating system (Mac / Windows).\n\n\n\n\nRun the installer and follow its instructions to install the software into a folder you prefer.\n\n\nIt is preferred that the R installation folder path \nDO NOT CONTAIN BLANK SPACES\n, because spaces occasionally cause bugs in dependent open-source software packages.\n\n\nExtra Steps for Windows Users Only\n\n\nWindows users need one extra step to make sure you can run the command \nRscript.exe\n from the command-line terminal.\n\n\n\n\n\n\nGo to \nControl Panel\n \n \nSystem\n \n \nAdvanced System Settings\n \n \nEnvironment Variables\n, look under the \nSystem Variable\n section for the variable \nPath\n, and append the following path to the existing text:\n\n\n;\nYour R Installation Folder\n/bin\n\n\n(note that there should be a semi-colon (\n;\n) separating the existing path and the appended path, and that there must be no space between that semi-colon and the appended path)\n\n\n\n\n\n\nOpen the command-line terminal via \nStart Menu\n \n \nRun\n \n \ncmd\n. Enter the following command and verify that it returns the folder path containing the \nRscript.exe\n file:\n\n\nwhere Rscript\n\n\n\n\n\n\nRStudio Installation\n\n\nRStudio is the most popular integrated development environment (IDE) for R.\n\n\nGo \nhere\n to download a graphical installer of RStudio appropriate for your machine\u2019s\n\n\n\n\nprocessor (32-bit / 64-bit), and\n\n\noperating system (Mac / Windows).\n\n\n\n\nRun the installer and follow its instructions to install the software into a folder you prefer.\n\n\nCRAN Packages Installation\n\n\nWe need to install a number of packages from the \nComprehensive R Archive Network\n (\nCRAN\n), a repository of open-source packages developed in R.\n\n\n\n\n\n\nFirst, make sure you have cloned and synchronized the \ncourse GitHub repository\n onto your machine;\n\n\n\n\n\n\nOpen the command-line terminal:\n\n\n\n\nMac\n: via the \niTerm\n app\n\n\nWindows\n: via \nStart Menu\n \n \nRun\n \n \ncmd\n;\n\n\n\n\n\n\n\n\nNavigate to the \n[Your Course Repository Folder]\n/Software/R/\n folder; and\n\n\n\n\n\n\nRun the command \nRscript RInstallPackages.R\n to install the R packages necessary for this course", 
            "title": "R, RStudio & CRAN Packages"
        }, 
        {
            "location": "/Installation/R, RStudio & CRAN Packages/#r-installation", 
            "text": "Go  here  to download a graphical installer of the latest R version appropriate for your machine\u2019s   processor (32-bit / 64-bit), and  operating system (Mac / Windows).   Run the installer and follow its instructions to install the software into a folder you prefer.  It is preferred that the R installation folder path  DO NOT CONTAIN BLANK SPACES , because spaces occasionally cause bugs in dependent open-source software packages.", 
            "title": "R Installation"
        }, 
        {
            "location": "/Installation/R, RStudio & CRAN Packages/#extra-steps-for-windows-users-only", 
            "text": "Windows users need one extra step to make sure you can run the command  Rscript.exe  from the command-line terminal.    Go to  Control Panel     System     Advanced System Settings     Environment Variables , look under the  System Variable  section for the variable  Path , and append the following path to the existing text:  ; Your R Installation Folder /bin  (note that there should be a semi-colon ( ; ) separating the existing path and the appended path, and that there must be no space between that semi-colon and the appended path)    Open the command-line terminal via  Start Menu     Run     cmd . Enter the following command and verify that it returns the folder path containing the  Rscript.exe  file:  where Rscript", 
            "title": "Extra Steps for Windows Users Only"
        }, 
        {
            "location": "/Installation/R, RStudio & CRAN Packages/#rstudio-installation", 
            "text": "RStudio is the most popular integrated development environment (IDE) for R.  Go  here  to download a graphical installer of RStudio appropriate for your machine\u2019s   processor (32-bit / 64-bit), and  operating system (Mac / Windows).   Run the installer and follow its instructions to install the software into a folder you prefer.", 
            "title": "RStudio Installation"
        }, 
        {
            "location": "/Installation/R, RStudio & CRAN Packages/#cran-packages-installation", 
            "text": "We need to install a number of packages from the  Comprehensive R Archive Network  ( CRAN ), a repository of open-source packages developed in R.    First, make sure you have cloned and synchronized the  course GitHub repository  onto your machine;    Open the command-line terminal:   Mac : via the  iTerm  app  Windows : via  Start Menu     Run     cmd ;     Navigate to the  [Your Course Repository Folder] /Software/R/  folder; and    Run the command  Rscript RInstallPackages.R  to install the R packages necessary for this course", 
            "title": "CRAN Packages Installation"
        }, 
        {
            "location": "/Installation/Python Anaconda, PyCharm IDE, and Conda & PyPI Packages/", 
            "text": "Python Installation\n\n\nWe recommend Continuum Analytics\u2019 Anaconda distribution of Python v\n2.7\n and compatible popular scientific computation packages.\n\n\nGo \nhere\n to download a graphical installer appropriate for your machine\u2019s\n\n\n\n\nprocessor (32-bit / 64-bit), and\n\n\noperating system (Mac / Windows).\n\n\n\n\nRun the installer and follow its instructions to install the software into a folder you prefer.\n\n\nNote that the Anaconda installation folder path \nMUST NOT CONTAIN BLANK SPACES\n, because spaces occasionally cause bugs in dependent open-source software packages.\n\ufffc\ufffc\ufffc\n\ufffc\ufffc\ufffc\ufffc\n\n\n\ufffc\nAnaconda Academic License\n\n\nContinuum offers free Anaconda advanced computation optimization add-ons for academic use.\n\n\nYou may obtain an Academic License \nhere\n and follow the instructions in the company\u2019s email after you submit your request.\n\n\n\n\nAmong all things, this Academic License gives you a free upgrade of the default BLAS (Basic Linear Algebra Subprograms) libraries of Anaconda Python to Intel\u2019s Math Kernel Library (MKL), which is among the fastest BLAS\u2019es around. This enables faster math, saving time for you and your machine \u2013 \nand, hell yeah, salvaging a precious little bit more of your machine\u2019s \nresale value\n! \n\n\n\n\n(The commands to install MKL are already included in the pre-included installation script file discussed in section \nAdditional Conda \n PyPI Packages Installation\n below)\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\n\n\nJetBrains PyCharm IDE Installation \n[Recommended but Optional]\n\n\nJetBrains, a vendor of popular integrated development environments (IDEs) for professional software developers, has an excellent IDE named PyCharm for Python.\n\n\nWe recommend PyCharm, but you may feel free to go with any ther Python IDE(s) of your own choice.\n\n\nIf you do opt for PyCharm, go \nhere\n to download its free Community Edition and install it onto your machine.\n\n\nNote:\n you typically need to manually configure your installed IDE (PyCharm or other) to link it to the a Python backend (\u201cPython interpreter\u201d). There should be easy-to-follow online guides on how to do this for each IDE.\n\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\n\n\nAdditional Conda \n PyPI Packages Installation\n\n\nWe need to install a number of packages from both Continuum Analytics\u2019 Anaconda and the Python Package Index (PyPI).\n\n\n\n\n\n\nFirst, make sure you have cloned and synchronized the \ncourse GitHub repository\n onto your machine;\n\n\n\n\n\n\nOpen the command-line terminal:\n\n\n\n\nMac\n: via the \niTerm\n app\n\n\nWindows\n: via the \nCygwin\n terminal;\n\n\n\n\n\n\n\n\nNavigate to the \n[Your Course Repository Folder]\n/Software/Python/\n folder; and\n\n\n\n\n\n\nRun the folllowing command: \nsh PythonInstallPackages.sh", 
            "title": "Python Anaconda, PyCharm IDE, and Conda & PyPI Packages"
        }, 
        {
            "location": "/Installation/Python Anaconda, PyCharm IDE, and Conda & PyPI Packages/#python-installation", 
            "text": "We recommend Continuum Analytics\u2019 Anaconda distribution of Python v 2.7  and compatible popular scientific computation packages.  Go  here  to download a graphical installer appropriate for your machine\u2019s   processor (32-bit / 64-bit), and  operating system (Mac / Windows).   Run the installer and follow its instructions to install the software into a folder you prefer.  Note that the Anaconda installation folder path  MUST NOT CONTAIN BLANK SPACES , because spaces occasionally cause bugs in dependent open-source software packages.\n\ufffc\ufffc\ufffc\n\ufffc\ufffc\ufffc\ufffc", 
            "title": "Python Installation"
        }, 
        {
            "location": "/Installation/Python Anaconda, PyCharm IDE, and Conda & PyPI Packages/#anaconda-academic-license", 
            "text": "Continuum offers free Anaconda advanced computation optimization add-ons for academic use.  You may obtain an Academic License  here  and follow the instructions in the company\u2019s email after you submit your request.   Among all things, this Academic License gives you a free upgrade of the default BLAS (Basic Linear Algebra Subprograms) libraries of Anaconda Python to Intel\u2019s Math Kernel Library (MKL), which is among the fastest BLAS\u2019es around. This enables faster math, saving time for you and your machine \u2013  and, hell yeah, salvaging a precious little bit more of your machine\u2019s  resale value !    (The commands to install MKL are already included in the pre-included installation script file discussed in section  Additional Conda   PyPI Packages Installation  below)\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc", 
            "title": "\ufffcAnaconda Academic License"
        }, 
        {
            "location": "/Installation/Python Anaconda, PyCharm IDE, and Conda & PyPI Packages/#jetbrains-pycharm-ide-installation-recommended-but-optional", 
            "text": "JetBrains, a vendor of popular integrated development environments (IDEs) for professional software developers, has an excellent IDE named PyCharm for Python.  We recommend PyCharm, but you may feel free to go with any ther Python IDE(s) of your own choice.  If you do opt for PyCharm, go  here  to download its free Community Edition and install it onto your machine.  Note:  you typically need to manually configure your installed IDE (PyCharm or other) to link it to the a Python backend (\u201cPython interpreter\u201d). There should be easy-to-follow online guides on how to do this for each IDE. \n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc", 
            "title": "JetBrains PyCharm IDE Installation [Recommended but Optional]"
        }, 
        {
            "location": "/Installation/Python Anaconda, PyCharm IDE, and Conda & PyPI Packages/#additional-conda-pypi-packages-installation", 
            "text": "We need to install a number of packages from both Continuum Analytics\u2019 Anaconda and the Python Package Index (PyPI).    First, make sure you have cloned and synchronized the  course GitHub repository  onto your machine;    Open the command-line terminal:   Mac : via the  iTerm  app  Windows : via the  Cygwin  terminal;     Navigate to the  [Your Course Repository Folder] /Software/Python/  folder; and    Run the folllowing command:  sh PythonInstallPackages.sh", 
            "title": "Additional Conda &amp; PyPI Packages Installation"
        }, 
        {
            "location": "/Installation/Python Theano/", 
            "text": "Theano: Overview\n\n\nTheano is a Python library that enables using a compatible GPU (Graphical Processing Unit) of the computer for numerical computation, which is far superior in performance terms to computation by the computer\u2019s CPU (Central Processing Unit).\n\n\n\n\n\n\nCurrently, the most, if not only, effectively Theano-supported GPUs are those by NVIDIA\n\n\n\n\n\n\nEven if your machine do not have an NVIDIA graphics card, Theano is still useful in compiling complex calculations down to highly efficient C / C++ or machine code that can execute very fast\n\ufffc\ufffc\ufffc\n\n\n\n\n\n\nBecause of its huge performance-boosting benefits, Theano is prominent in extremely data-intensive, large-scale Machine Learning applications such as those in cutting-edge Neural Networks-based Deep Learning.\n\n\nHaving said that, Theano is still very young (\n\"young\"\n = nice word for \n\"buggy\"\n) and its setup, configuration and usage demand a high degree of risk-taking and perseverance. :( \n(It helps if you are good with your friends and hence enjoy good karma)\n\n\nWe will hence use Theano only on a \nlimited, experimental basis\n for some exercises in Neural Networks, and we will install it in such a way that if your computer does not have an NVIDIA GPU, Theano will fall back to NumPy, which is Python\u2019s default numerical computation library.\n\n\nIn case you are unsuccessful in struggling through the Theano installation, we will use a non-Theano-dependent library for the Neural Networks exercises.\n\n\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\n\n\n\ufffcTheano Installation and Configuration on Mac\n\n\nYou may refer to the Theano installation and configuration guide for Mac \nhere\n.\n\n\nAppropriate steps vary from machine to machine. Consult \nDr. Google\n and \n*Prof. Stack Overflow\n whenever you get stuck.\n\n\nIn the Teaching Assistants\u2019 own experience, the recommended key steps include:\n\n\n\n\nInstall the \nAnaconda Python v2.7 distribution\n *(this should be already done, per instructions in a previous section)\n\n\nInstall the \nadditional Conda \n PyPI packages\n per instructions in the previous section\n\n\nInstall the Clang compiler through installing the \nXCode app\n from the Apple App Store and running XCode once to install its command-line tools\n\n\nInstall the \nCUDA graphics driver and toolkit v7\n from NDIVIA in order to use the GPU to perform numerical computation\n\n\nCopy the \n.theanorc\n file in the \n[Your Course Repository Folder]\n*/Software/Python/Theano/Mac\n folder to the \n/\n[Your Username]\n/\n home folder, customize the copied file (NOT the original file) according to the comments, and save it\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\nOne common source of error in setting up Theano on Mac concerns the BLAS (Basic Linear Algebra Subprograms) libraries\n\n\nRefer \nhere\n for some troubleshooting guidance on this issue Verification steps:\n\n\n\n\nRun the \nTheanoTestScript.py\n file in the \n[Your Course Repository Folder]\n/Software/Python/Theano/\n folder, either via your Python IDE or through the terminal, and verify that it completes successfully, giving your a comparison of speeds between NumPy and Theano\n\ufffc\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\n\n\n\ufffcTheano Installation and Configuration on Windows\n\n\nYou may refer to the Theano installation and configuration guide for Windows \nhere\n.\n\n\nAppropriate steps vary from machine to machine. Consult \nDr. Google\n and \nProf. Stack Overflow\n whenever you get stuck.\n\n\nIn the Teaching Assistants\u2019 own experience, the recommended key steps include:\n\n\n\n\nInstall the \nAnaconda Python v2.7 distribution\n *(this should be already done, per instructions in a previous section)\n\n\nInstall the \nadditional Conda \n PyPI packages\n per instructions in the previous section\n\n\nFind and install \nVisual Studio Community 2013\n\n\ndo \nNOT\n install the 2015 version, which is not compatible with the CUDA software below\n\n\n\n\n\n\nInstall the \nCUDA graphics driver and toolkit v7\n from NDIVIA in order to use the GPU to perform numerical computation\n\n\nInstall the \nMicrosoft Visual C++ Compiler for Python v2.7\n\n\nInstall a \nGNU C Compiler (GCC)\n such as \nthis\n\n\nInstall \nGraphViz\n into a folder whose path has \nno blank spaces\n\n\nOpen the \npydot.py\n file in the \n[Your Anaconda Installation Folder]\n/lib/site-packages/\n folder. Locate the \n_find_graphviz\n function, comment its whole content out and replace with the following: \nreturn _find_executables(\u2018[YOUR GRAPHVIZ INSTALLATION FOLDER]/bin\u2019)\n\n\n\n\nCopy the \n.theanorc\n file under \n[Your Course Repository Folder]\n/Software Guides/Python/Theano/Windows/\n folder to \nC:/Users/\n[Your Windows User Name]\n/.theano/\n folder, customize the copied file (NOT the original file) according to the comments, and save it\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\nVerification steps: open your \n*CygWin terminal\nand:\n\n\n\n\n\n\nrun \nwhere gcc\n and verify that the path to your GCC installation\u2019s \ngcc.exe\n file appears\n\n\n\n\nrun \nwhere nvcc\n and verify that the path to your CUDA installation\u2019s \nnvcc.exe\n file appears\n\n\nrun the \nTheanoTestScript.py\n file under \n[Your Course Repository Folder]\n/Software Guides/Python/Theano/\n, either via your Python IDE or through the terminal, and verify that it completes successfully, giving your a comparison of speeds between NumPy and Theano\n\ufffc\ufffc\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\n\n\n\n\n\ufffcTheano Configurations \n[for info only]\n\n\nTheano has a large number of configuration levers, the most common of which are discussed \nhere\n.\n\n\nYou do not need to pay attention to those for this course.", 
            "title": "Python Theano package"
        }, 
        {
            "location": "/Installation/Python Theano/#theano-overview", 
            "text": "Theano is a Python library that enables using a compatible GPU (Graphical Processing Unit) of the computer for numerical computation, which is far superior in performance terms to computation by the computer\u2019s CPU (Central Processing Unit).    Currently, the most, if not only, effectively Theano-supported GPUs are those by NVIDIA    Even if your machine do not have an NVIDIA graphics card, Theano is still useful in compiling complex calculations down to highly efficient C / C++ or machine code that can execute very fast\n\ufffc\ufffc\ufffc    Because of its huge performance-boosting benefits, Theano is prominent in extremely data-intensive, large-scale Machine Learning applications such as those in cutting-edge Neural Networks-based Deep Learning.  Having said that, Theano is still very young ( \"young\"  = nice word for  \"buggy\" ) and its setup, configuration and usage demand a high degree of risk-taking and perseverance. :(  (It helps if you are good with your friends and hence enjoy good karma)  We will hence use Theano only on a  limited, experimental basis  for some exercises in Neural Networks, and we will install it in such a way that if your computer does not have an NVIDIA GPU, Theano will fall back to NumPy, which is Python\u2019s default numerical computation library.  In case you are unsuccessful in struggling through the Theano installation, we will use a non-Theano-dependent library for the Neural Networks exercises.  \ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc", 
            "title": "Theano: Overview"
        }, 
        {
            "location": "/Installation/Python Theano/#theano-installation-and-configuration-on-mac", 
            "text": "You may refer to the Theano installation and configuration guide for Mac  here .  Appropriate steps vary from machine to machine. Consult  Dr. Google  and  *Prof. Stack Overflow  whenever you get stuck.  In the Teaching Assistants\u2019 own experience, the recommended key steps include:   Install the  Anaconda Python v2.7 distribution  *(this should be already done, per instructions in a previous section)  Install the  additional Conda   PyPI packages  per instructions in the previous section  Install the Clang compiler through installing the  XCode app  from the Apple App Store and running XCode once to install its command-line tools  Install the  CUDA graphics driver and toolkit v7  from NDIVIA in order to use the GPU to perform numerical computation  Copy the  .theanorc  file in the  [Your Course Repository Folder] */Software/Python/Theano/Mac  folder to the  / [Your Username] /  home folder, customize the copied file (NOT the original file) according to the comments, and save it\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\nOne common source of error in setting up Theano on Mac concerns the BLAS (Basic Linear Algebra Subprograms) libraries  Refer  here  for some troubleshooting guidance on this issue Verification steps:   Run the  TheanoTestScript.py  file in the  [Your Course Repository Folder] /Software/Python/Theano/  folder, either via your Python IDE or through the terminal, and verify that it completes successfully, giving your a comparison of speeds between NumPy and Theano\n\ufffc\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc", 
            "title": "\ufffcTheano Installation and Configuration on Mac"
        }, 
        {
            "location": "/Installation/Python Theano/#theano-installation-and-configuration-on-windows", 
            "text": "You may refer to the Theano installation and configuration guide for Windows  here .  Appropriate steps vary from machine to machine. Consult  Dr. Google  and  Prof. Stack Overflow  whenever you get stuck.  In the Teaching Assistants\u2019 own experience, the recommended key steps include:   Install the  Anaconda Python v2.7 distribution  *(this should be already done, per instructions in a previous section)  Install the  additional Conda   PyPI packages  per instructions in the previous section  Find and install  Visual Studio Community 2013  do  NOT  install the 2015 version, which is not compatible with the CUDA software below    Install the  CUDA graphics driver and toolkit v7  from NDIVIA in order to use the GPU to perform numerical computation  Install the  Microsoft Visual C++ Compiler for Python v2.7  Install a  GNU C Compiler (GCC)  such as  this  Install  GraphViz  into a folder whose path has  no blank spaces  Open the  pydot.py  file in the  [Your Anaconda Installation Folder] /lib/site-packages/  folder. Locate the  _find_graphviz  function, comment its whole content out and replace with the following:  return _find_executables(\u2018[YOUR GRAPHVIZ INSTALLATION FOLDER]/bin\u2019)   Copy the  .theanorc  file under  [Your Course Repository Folder] /Software Guides/Python/Theano/Windows/  folder to  C:/Users/ [Your Windows User Name] /.theano/  folder, customize the copied file (NOT the original file) according to the comments, and save it\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\nVerification steps: open your  *CygWin terminal and:    run  where gcc  and verify that the path to your GCC installation\u2019s  gcc.exe  file appears   run  where nvcc  and verify that the path to your CUDA installation\u2019s  nvcc.exe  file appears  run the  TheanoTestScript.py  file under  [Your Course Repository Folder] /Software Guides/Python/Theano/ , either via your Python IDE or through the terminal, and verify that it completes successfully, giving your a comparison of speeds between NumPy and Theano\n\ufffc\ufffc\n\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc\ufffc", 
            "title": "\ufffcTheano Installation and Configuration on Windows"
        }, 
        {
            "location": "/Installation/Python Theano/#theano-configurations-for-info-only", 
            "text": "Theano has a large number of configuration levers, the most common of which are discussed  here .  You do not need to pay attention to those for this course.", 
            "title": "\ufffcTheano Configurations [for info only]"
        }
    ]
}